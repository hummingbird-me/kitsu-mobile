# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://docs.fastlane.tools/actions
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "2.53.1"

default_platform :ios

platform :ios do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
  end

  desc "Runs all the tests"
  lane :test do
    scan
  end

  desc "Deploy a new version to the App Store"
  lane :update_match do
    register_devices(
      devices_file: "./fastlane/devices.txt"
    )

    match(
      app_identifier: "com.EverFox.AnimeTrakr",
      git_url: "https://github.com/hummingbird-me/certificates.git",
      type: "development",
      force_for_new_devices: true
    )

    match(
      app_identifier: "com.EverFox.AnimeTrakr",
      git_url: "https://github.com/hummingbird-me/certificates.git",
      type: "adhoc",
      force_for_new_devices: true
    )

    match(
      app_identifier: "com.EverFox.AnimeTrakr",
      git_url: "https://github.com/hummingbird-me/certificates.git",
      type: "appstore"
    )

  end

  desc "Submit a new Beta Build to crashlytics"
  desc "This will also make sure the profile is up to date"
  lane :beta do |values|
    # Before calling match, we make sure all our devices are registered on the Apple Developer Portal
    create_keychain(
      name: ENV["MATCH_KEYCHAIN_NAME"],
      password: ENV["MATCH_KEYCHAIN_PASSWORD"],
      default_keychain: true,
      unlock: true,
      timeout: 3600,
      add_to_search_list: true
    )

    unlock_keychain(
			path: ENV["MATCH_KEYCHAIN_NAME"],
			add_to_search_list: :replace,
      password: ENV['MATCH_KEYCHAIN_PASSWORD']
		)

    register_devices(
      devices_file: "./fastlane/devices.txt"
    )

    # After registering the new devices, we'll make sure to update the provisioning profile if necessary
    # options for type are "adhoc", "development", "appstore"
    match(
      app_identifier: "com.EverFox.AnimeTrakr",
      type: "development",
      force_for_new_devices: !is_ci, # update only forced on non-CI systems, and only if there is a new device
      readonly: true,  #readonly mode to be sure it won't create any new certificates or profiles.
      keychain_name: ENV["MATCH_KEYCHAIN_NAME"],
      keychain_password: ENV["MATCH_KEYCHAIN_PASSWORD"]
    )

    match(
      app_identifier: "com.EverFox.AnimeTrakr",
      type: "adhoc",
      force_for_new_devices: !is_ci, # update only forced on non-CI systems, and only if there is a new device
      # clone_branch_directly: true,
      readonly: true,  #readonly mode to be sure it won't create any new certificates or profiles.
      keychain_name: ENV["MATCH_KEYCHAIN_NAME"],
      keychain_password: ENV["MATCH_KEYCHAIN_PASSWORD"],
      verbose: true
    )

    # Change build number (requirement of Testflight).
    increment_build_number(
      build_number: ENV["TRAVIS_BUILD_NUMBER"]
    )

    # Build a release
    gym(
      scheme: "kitsu_mobile",
      clean: true,
      configuration: "Release",
      project: "./kitsu_mobile.xcodeproj",
      # workspace: "./kitsu_mobile.xcworkspace" # if using pods
      export_method: "ad-hoc",
      xcargs: "PROVISIONING_PROFILE_SPECIFIER='match AdHoc com.EverFox.AnimeTrakr'"
    )

    emails = values[:test_email] ? values[:test_email] : ['josh@kitsu.io','mikunj@live.com.au','daniel@rassiner.com','nuck@kitsu.io', 'edencakir@gmail.com', 'pjchavarria@gmail.com', 'bilal@codeinfuse.com'] # You can list more emails here
    groups = values[:test_email] ? nil : nil # You can define groups on the web and reference them here

    crashlytics(
      api_token: 'b4ccb0473f2023c511cbd8fbd2dcef86b2cf7b00',
      build_secret: '010015018557534a1a97465380fd280881f586eec24f45bcc511520a031d50d4',
      emails: emails,
      groups: groups,
      debug: true,
      # there is a bug of crashlytics for notes (https://github.com/fastlane/fastlane/issues/6325)
      # notes: 'Distributed with fastlane', # Check out the changelog_from_git_commits action
      notifications: true  # Should this distribution notify your testers via email?
    )

    # sh "your_script.sh"
    # You can also use other beta testing services here (run `fastlane actions`)
  end

  desc "Deploy a new version to the App Store"
  lane :release do
    # Before calling match, we make sure all our devices are registered on the Apple Developer Portal
    create_keychain(
      name: ENV["MATCH_KEYCHAIN_NAME"],
      password: ENV["MATCH_KEYCHAIN_PASSWORD"],
      default_keychain: true,
      unlock: true,
      timeout: 3600,
      add_to_search_list: true
    )

    unlock_keychain(
			path: ENV["MATCH_KEYCHAIN_NAME"],
			add_to_search_list: :replace,
      password: ENV['MATCH_KEYCHAIN_PASSWORD']
		)

    match(
      app_identifier: "com.EverFox.AnimeTrakr",
      type: "appstore",
      # clone_branch_directly: true,
      readonly: true,  #readonly mode to be sure it won't create any new certificates or profiles.
      keychain_name: ENV["MATCH_KEYCHAIN_NAME"],
      keychain_password: ENV["MATCH_KEYCHAIN_PASSWORD"]
    )

    # snapshot

    # Build a release
    gym(
      scheme: "kitsu_mobile",
      clean: true,
      configuration: "Release",
      project: "./kitsu_mobile.xcodeproj",
      # workspace: "./kitsu_mobile.xcworkspace" # if using pods
      export_method: "app-store",
      xcargs: "PROVISIONING_PROFILE_SPECIFIER='match AppStore com.EverFox.AnimeTrakr'"
    )
    deliver(force: true)
    # frameit
  end

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://docs.fastlane.tools/actions

# fastlane reports which actions are used. No personal data is recorded.
# Learn more at https://github.com/fastlane/fastlane#metrics
